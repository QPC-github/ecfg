.\" generated with Ronn/v0.7.3
.\" http://github.com/rtomayko/ronn/tree/0.7.3
.
.TH "ECFG" "5" "July 2016" "Shopify" "Version 0.3.0"
.
.SH "NAME"
\fBecfg\fR \- JSON, YAML, or TOML file with asymmetric\-key\-encrypted values
.
.SH "SYNOPSIS"
An \fBecfg\fR file is syntactically a \fBjson\fR, \fByaml\fR, or \fBtoml\fR file, but with a few minor semantic additions described below\.
.
.SH "PUBLIC KEY"
Each \fBecfg\fR file must have a key at the top level named \fB_public_key\fR\. This implies that the top\-level structure must be a hashmap, not an array\.
.
.P
The \fB_public_key\fR key must have a string value, which is a hex\-encoded 32\-byte (totalling 64 ASCII bytes) public key as generated by \fIecfg\-keygen\fR(1)\.
.
.P
By convention, \fB_public_key\fR should be the first key in the file\.
.
.SH "ENCRYPTABLE VALUES"
A value is considered encryptable if:
.
.IP "1." 4
It is a string literal (numbers, true, false, null all remain unencrypted);
.
.IP "2." 4
It is not an object key (ie\. not immediately followed by a ":");
.
.IP "3." 4
Its corresponding object key did not begin with an underscore ("_")\.
.
.IP "" 0
.
.P
Take special note of point 3\. This is the reason \fB_public_key\fR isn\'t encrypted, and can be used to construct metadata schemes\. For example, in the excerpt below, only the values for \fBrotation_password\fR and \fBsecret\fR will be encrypted\.
.
.IP "" 4
.
.nf

"my_secret": {
  "_description": "API key for foocorp",
  "_rotation": "https://example\.com/foocorp/apikey",
  "_rotation_username": "admin",
  "rotation_password": "password",
  "secret": "123123123123123123123"
}
.
.fi
.
.IP "" 0
.
.P
Also note that this underscore "unencryptable" attribute is not heritable\. For example, the password in this excerpt \fBwill\fR be encrypted\.
.
.IP "" 4
.
.nf

"_unencryptable": {
  "password": "encrypted anyway"
}
.
.fi
.
.IP "" 0
.
.SH "SECRET SCHEMA"
When a value is encrypted, it will be replaced by a relatively long string of the form \fI"EJ[V:P:N:M]"\fR\. The fields are:
.
.IP "\(bu" 4
\fBV\fR (decimal\-as\-string int) Schema Version, hard\-coded to "1" for now
.
.IP "\(bu" 4
\fBP\fR (base64\-encoded 32\-byte array) Public key of an ephemeral keypair used to encrypt this key
.
.IP "\(bu" 4
\fBN\fR (base64\-encoded 24\-byte array) Nonce used to encrypt this key
.
.IP "\(bu" 4
\fBM\fR (base64\-encoded variable\-length array) Raw ciphertext
.
.IP "" 0
.
.SH "SEE ALSO"
ecfg(1), ecfg\-encrypt(1), ecfg\-decrypt(1), ecfg\-keygen(1)
